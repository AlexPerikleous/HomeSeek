@using HomeSeek.Web.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}


<!--register form -->
<div class="reg-overlay"></div>
<div class="main-register-holder tabs-act">
    <div class="main-register fl-wrap">
        <div class="main-register_title">Welcome to <span><strong>Home</strong>Seek<strong>.</strong></span></div>
        <ul class="tabs-menu fl-wrap no-list-style">
            <li class="current"><a href="#tab-1"><i class="fal fa-sign-in-alt"></i> Login</a></li>
        </ul>
        <!--tabs -->
        <div class="tabs-container">
            <div class="tab">
                <!--tab -->
                <div id="tab-1" class="tab-content first-tab">
                    <div class="custom-form">

                        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <h4>Use a local account to log in.</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(m => m.Email, new { @class = "" })
                                <div class="">
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Password, new { @class = "" })
                                <div class="">
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group form-check">
                                <div class="">
                                    <div class="">
                                        @Html.CheckBoxFor(m => m.RememberMe, new { @class = "form-check-input" })
                                        @Html.LabelFor(m => m.RememberMe, new { @class = "form-check-label" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="">
                                    <input type="submit" value="Log in" class="btn float-btn color2-bg" />
                                </div>
                            </div>
                            <p>
                                @Html.ActionLink("Register as a new user", "Register", null, new { @class = "btn btn-outline-primary blue-bg_color" })
                            </p>
                            //Enable this once you have account confirmation enabled for password reset functionality
                    <div class="lost_password">
                        @Html.ActionLink("Lost Your Password?", "ForgotPassword")
                    </div>
                    }
                    </div>
                </div>
                <!--tab end -->
            </div>
            <!--tabs end -->
            <div class="log-separator fl-wrap"><span>or</span></div>
            <div class="soc-log fl-wrap">

                @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })



            </div>
            <div class="wave-bg">
                <div class='wave -one'></div>
                <div class='wave -two'></div>
            </div>
        </div>
    </div>
</div>
<!--register form end -->


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}