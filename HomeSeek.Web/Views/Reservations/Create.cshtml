@model HomeSeek.Entities.Reservation

@{
    ViewBag.Title = "Create";
}

<div class="col-5 center-block mt-2">
    @using (Html.BeginForm( @*"Details","Places",new { id=ViewBag.PlaceId }*@))
    {
        @Html.AntiForgeryToken()


        <!--cart-details  -->
        <div class="cart-details fl-wrap block_box">
            <div class="cart-total color2-bg fl-wrap">
                <p class="text-white text-center" , style="font-size:1.25rem;"> Book Your Reservation </p>
            </div>
            <!--ccart-details_text-->
            <div class="cart-details_text">
                <ul class="cart_list no-list-style">
                    <li>
                        Check In Date <span>
                            @Html.EditorFor(model => model.CheckInDate, new { htmlAttributes = new { @class = "btn text-info", @Value = ViewBag.Checkin } })
                            @Html.ValidationMessageFor(model => model.CheckInDate, "", new { @class = "text-danger" })
                        </span>
                    </li>
                    <li>
                        Check Out Date  <span>
                            @Html.EditorFor(model => model.CheckOutDate, new { htmlAttributes = new { @class = "btn text-info", @Value = ViewBag.Checkout } })
                            @Html.ValidationMessageFor(model => model.CheckOutDate, "", new { @class = "text-danger" })
                        </span>
                    </li>
                    <li>
                        Days Of Staying<span>
                            @Html.TextBoxFor(model => model.DaysOfStaying, new { @class = "btn text-info", @Value = ViewBag.DaysOfStaying })
                            @Html.ValidationMessageFor(model => model.DaysOfStaying, "", new { @class = "text-danger" })
                        </span>
                    </li>
                    <li>
                        Price Per Day<span><input type="text" class="btn text-center text-info text-left" value="@ViewBag.PricePerDay" /> </span>
                    </li>
                    <li>
                        Clean Cost<span><input type="text" class="btn text-center text-info text-left " value="@ViewBag.CleanCost" /> </span>
                    </li>
                    <li>
                        Payment Date<span>
                            @Html.EditorFor(model => model.PaymentDate, new { htmlAttributes = new { @class = "btn  text-info", @Value = ViewBag.ReservationDate } })
                            @Html.ValidationMessageFor(model => model.PaymentDate, "", new { @class = "text-danger" })
                        </span>
                    </li>
                </ul>
            </div>
            <!--cart-details_text end -->
        </div>
        <!--cart-details end -->
        <!--cart-total -->
        <div class="cart-total color2-bg fl-wrap">
            <span class="cart-total_item_title">Total Cost</span>
            <strong>
                @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "btn text-white", @Value = ViewBag.TotalPrice } })
                @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-danger" })
            </strong>
            @Html.EditorFor(model => model.TotalFees, new { htmlAttributes = new { @Value = ViewBag.DaysOfStaying, @class = "", @readonly = "readonly", hidden = "hidden" } })
            @Html.ValidationMessageFor(model => model.TotalFees, "", new { @class = "text-danger" })
            @Html.TextBox("PlaceId", "PlaceId", new { type = "hidden" })
            <input type="submit" id="myCheck" value="Create" class="btn btn-default" hidden="hidden" />
        </div>
        <div> &nbsp;</div>
    }

    <div id="paypal-button-container"></div>

    <script src="https://www.paypal.com/sdk/js?client-id=ARY71eJSX_meWn4A-ocvcOTr3BEJ43AVbwW3i6jNj4O0vDGpsTBkGNLKpLQqkDAqx9o0mTTWy0XX2ng9"></script>

    <script>
  paypal.Buttons({
    createOrder: function(data, actions) {
      // This function sets up the details of the transaction, including the amount and line item details.
      return actions.order.create({
        purchase_units: [{
          amount: {
            value: @ViewBag.TotalPrice
          }
        }]
      });
    },
      onApprove: function (data, actions) {
          document.getElementById("myCheck").click();
      // This function captures the funds from the transaction.
      return actions.order.capture().then(function(details) {
        // This function shows a transaction success message to your buyer.
          window.location.replace("https://localhost:44328/Reservations/OnApprove");
      });
    }
  }).render('#paypal-button-container');
  //This function displays Smart Payment Buttons on your web page.
    </script>

</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}